---
title: Aeolus | Basic Glossary
---
%h1 Basic Glossary for Aeolus 0.10.0

%p
  Before we get started with the initial configuration, here are some terms and definitions that will be useful to know.
%p
  This page will also include a diagram explaining the Conductor UI Dependencies.

= render 'gsg_navigation', :selected_page => 'basic_glossary.html'

%br

.section-grouping
  %h2(id="welcome") 1. Provider Type and Provider

  %p
    A provider is simply an instance of a provider type. For example, an EC2 region such as us-east-1. Users can have one or multiple accounts associated with a provider. Examples of cloud provider types include Amazon EC2, RHEV-M, and Rackspace.

  %p
    This guide will configure Aeolus for EC2, as well as a "Mock" provider for those without an available EC2 account.  The mock provider is simply a fake provider used for testing. The guide also covers configuration for oVirt/RHEVM providers.

%br

.section-grouping
  %h2(id="first-login") 2. Instance

  %p
    An instance is a single virtual machine running on a provider.

%br

.section-grouping
  %h2(id="welcome") 3. Image

  %p
    A Conductor image contains provider-independent metadata that Aeolus can use to generate disk images on supported providers.

  %p
    This guide will create an image for Fedora 16.

%br

.section-grouping
  %h2(id="first-login") 4. Deployable and Deployment

  %p
    A deployable references one or more images, along with the appropriate hardware profiles for those images.  A deployable is launched as a deployment.

  %p
    A deployment consists of one or more instances controlled as a group, such as a database server, an application server, and multiple front-end web servers.

%br

.section-grouping
  %h2(id="welcome") 5. Pool

  %p
    A grouping of instances and deployables.  Aeolus provides tools for managing pools, allowing the user to easily manage functions such as administrative rights, permissions, and quotas.

%br

.section-grouping
  %h2(id="welcome") 6. Catalog

  %p
    A catalog contains one or more deployables.  Each catalog is associated with a single pool.

%br


.section-grouping
  %h2(id="first-login") 7. Audrey

  %p
    Set of tools for run-time configuration on cloud instances. Enables user to perform further configuration using customizable script.

%br


.section-grouping
  %h2(id="first-login") 8. AMI

  %p
    Amazon Machine Image

%br

.section-grouping
  %h2(id="first-login") 9. Conductor UI Diagram

  %p
    This diagram is a flow chart of the dependencies required for Conductor as of July 2012. 

  %p
    %center
      %a{ :href => "Images/Glossary Images/current_ui_structure.png",
          :target => "_blank" }
        %img.thumbnail{ :src => "Images/Thumbnails/current_ui_structure_thumb.png",
              :title => "UI Structure - click to view at full size in a new window",
              :alt => "UI Structure - click to view at full size in a new window" }
%br

.section-grouping
  %h2(id="first-login") 10.  TDL

  %p
    Template Definition Language (TDL) is an implementation of Extensible Markup Language (XML). TDL is useful for marking up policy files because it results in self-describing documents.

  %p
    TDL is an XML-based language for creating image templates. TDL files define aspects of a virtual machine image including operating system, installation settings, packages, and files. An Aeolus user imports TDL files into Conductor. Aeolus (specially Imagefactory and Oz) interprets these TDL files and builds them into images, which can be pushed into cloud providers.  

%br
%a.button{ :href => "configuring_aeolus.html", :title => "Configuring Aeolus" }
  Configuring Aeolus
  %img{:src => "/images/button-right.png", :alt => "â†’"}
